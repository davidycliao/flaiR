% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flair_trainers.R
\name{flair_trainers}
\alias{flair_trainers}
\title{Import flair.trainers Module in R}
\usage{
flair_trainers()
}
\value{
A Python Module(flair.trainers) object allowing access to Flair's trainers in R.
}
\description{
This flair_trainers() provides R users with access to Flair's
ModelTrainer Python class using the {reticulate} package. The `ModelTrainer`
class offers the following main methods:
\itemize{
  \item \strong{train}: Trains a given model. Parameters include the corpus
  (data split into training, development, and test sets),
  an output directory to save the model and logs, and various
  other parameters to control the training process (e.g., learning rate,
  mini-batch size, maximum epochs).

  \item \strong{find_learning_rate}: Uses the "learning rate finder"
  method to find an optimal learning rate for training. Parameters
  typically include the corpus, batch size, and a range of learning
  rates to explore.

  \item \strong{final_test}: After training a model, this method evaluates
   the model on a test set and prints the results.

  \item \strong{save_checkpoint}: Saves the current training state
  (including model parameters and training configurations) to resume
  later if interrupted.

  \item \strong{load_checkpoint}: Loads a previously saved checkpoint to
  resume training.

  \item \strong{log_line}: Utility method for logging. Writes a
  line to both the console and the log file.

  \item \strong{log_section}: Utility method for logging. Writes a
  section break to both the console and the log file.
}
}
\examples{
\dontrun{
trainers <- flair_trainers()
model_trainer <- trainers$ModelTrainer
}
}
\references{
\href{https://github.com/flairNLP/flair/blob/master/flair/trainers/trainer.py}{Flair GitHub}
Python equivalent:
\preformatted{
from flair.trainers import ModelTrainer
}
}

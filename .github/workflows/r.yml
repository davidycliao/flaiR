# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.
# on:
#   push:
#     branches: [main, master]
#   pull_request:
#     branches: [main, master]
#
# name: R-CMD-check
#
# jobs:
#   R-CMD-check:
#     runs-on: ${{ matrix.config.os }}
#
#     name: ${{ matrix.config.os }} (${{ matrix.config.r }})
#
#     strategy:
#       fail-fast: false
#       matrix:
#         config:
#           - {os: macos-latest,   r: 'release'}
#           - {os: windows-latest, r: 'release'}
#           - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
#           - {os: ubuntu-latest,   r: 'release'}
#     env:
#       GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
#       R_KEEP_PKG_SOURCE: yes
#
#     steps:
#       - uses: actions/checkout@v2
#
#       - uses: r-lib/actions/setup-pandoc@v2
#
#
#       - name: Setup Python (Only on ubuntu-latest)
#         if: matrix.config.os == 'ubuntu-latest'
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.x'
#
#       - name: Install Python venv and dependencies (Only on ubuntu-latest)
#         if: matrix.config.os == 'ubuntu-latest'
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y python3-venv
#           python -m venv ~/.venv
#           echo "RETICULATE_PYTHON=~/.venv/bin/python" >> $GITHUB_ENV
#           source ~/.venv/bin/activate
#       - uses: r-lib/actions/setup-r@v2
#         with:
#           r-version: ${{ matrix.config.r }}
#           http-user-agent: ${{ matrix.config.http-user-agent }}
#           use-public-rspm: true
#
#       - name: Install reticulate (Only on ubuntu-latest)
#         if: matrix.config.os == 'ubuntu-latest'
#         run: |
#           Rscript -e "install.packages('reticulate', repos = 'https://cloud.r-project.org/')"
#
#       - uses: r-lib/actions/setup-r-dependencies@v2
#         with:
#           extra-packages: any::rcmdcheck
#           needs: check
#
#       - uses: r-lib/actions/check-r-package@v2
#         with:
#           upload-snapshots: true



on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      # 使用 setup-pandoc 动作，该动作应为你的构建提供一个合适版本的 Pandoc。
      - uses: r-lib/actions/setup-pandoc@v2

      - name: Setup Python (Only on ubuntu-latest)
        if: matrix.config.os == 'ubuntu-latest'
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Install Python venv and dependencies (Only on ubuntu-latest)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-venv
          python -m venv ~/.venv
          echo "RETICULATE_PYTHON=~/.venv/bin/python" >> $GITHUB_ENV
          source ~/.venv/bin/activate

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Install reticulate (Only on ubuntu-latest)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          Rscript -e "install.packages('reticulate', repos = 'https://cloud.r-project.org/')"

      # 使用 Brew 安装 Pandoc 只在 macOS 系统上有意义
      - name: Install pandoc (Only on macOS)
        if: matrix.config.os == 'macos-latest'
        run: |
          brew install pandoc

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flair

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: rcmdcheck
          # 似乎 "needs: check" 是不必要的或可能是个错误，因为在这个 workflow 中没有定义名为 check 的 job 或 step。

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true

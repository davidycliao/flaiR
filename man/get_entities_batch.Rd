% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/get_entities.R
\name{get_entities_batch}
\alias{get_entities_batch}
\title{Extract Named Entities from a Batch of Texts}
\usage{
get_entities_batch(
  texts,
  doc_ids,
  tagger = NULL,
  language = "en",
  show.text_id = FALSE,
  gc.active = FALSE,
  batch_size = 5,
  device = "cpu"
)
}
\arguments{
\item{texts}{A character vector of texts to process.}

\item{doc_ids}{A vector of document IDs corresponding to each text.}

\item{tagger}{A pre-loaded Flair NER tagger. Default is NULL, and the tagger is loaded based on the provided language.}

\item{language}{A character string specifying the language of the texts. Default is "en" (English).}

\item{show.text_id}{Logical, whether to include the text ID in the output. Default is FALSE.}

\item{gc.active}{Logical, whether to activate garbage collection after processing each batch. Default is FALSE.}

\item{batch_size}{An integer specifying the size of each batch. Default is 5.}

\item{device}{A character string specifying the computation device.
It can be either "cpu" or a string representation of a GPU device number.
For instance, "0" corresponds to the first GPU. If a GPU device number
is provided, it will attempt to use that GPU. The default is "cpu".
\itemize{
 \item{"cuda" or "cuda:0"}{Refers to the first GPU in the system. If
      there's only one GPU, specifying "cuda" or "cuda:0" will allocate
      computations to this GPU.}
 \item{"cuda:1"}{Refers to the second GPU in the system, allowing allocation
      of specific computations to this GPU.}
 \item{"cuda:2"}{Refers to the third GPU in the system, and so on for systems
      with more GPUs.}
}}
}
\value{
A data.table containing the extracted entities, their corresponding tags, and document IDs.
}
\description{
This function processes batches of texts and extracts named entities.
}
\examples{
# Example usage (assuming you have necessary dependencies and some sample data):
# result <- get_entities_batch(c("Hello world", "I love AI"), c(1, 2))

}

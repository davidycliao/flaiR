# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.

name: flaiR-MacOS
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test-installation:
    runs-on: macos-latest
    strategy:
      matrix:
        r-version: ['4.3.2', '4.2.0']
        python-version: ['3.10']
      fail-fast: false

    steps:
    - name: Set up R ${{ matrix.r-version }}
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: ${{ matrix.r-version }}

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'    # 確保使用 Python 3.10
        architecture: 'x64'       # 明確指定架構

    - name: Verify Python version
      run: |
        python --version
        which python

    - name: Setup virtual environment and dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install virtualenv
        python -m virtualenv r-reticulate
        source r-reticulate/bin/activate
        # python -m pip install torch>=2.0.0
        # python -m pip install scipy==1.12.0
        # python -m pip install flair>=0.11.3
        # python -m pip list
        deactivate

    - name: Test flaiR installation
      env:
        GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
        RETICULATE_PYTHON: ${{ github.workspace }}/r-reticulate/bin/python
      run: |
        Rscript -e '
          install.packages("remotes", repos="https://cran.r-project.org")
          Sys.setenv(GITHUB_PAT = Sys.getenv("GITHUB_PAT"))
          Sys.setenv(RETICULATE_PYTHON = Sys.getenv("RETICULATE_PYTHON"))
          tryCatch({
            remotes::install_github("davidycliao/flaiR", force = TRUE)
            reticulate::py_config()
            library(flaiR)
            cat("flaiR installed and loaded successfully\n")
          }, error = function(e) {
            cat("Error during installation or loading:", conditionMessage(e), "\n")
            quit(status = 1)
          })'

    - name: Print environment info
      if: always()
      run: |
        R --version
        python --version
        Rscript -e 'reticulate::py_config()'

# name: R-MacOS
#
# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]
#
# permissions:
#   contents: read
#
# jobs:
#   build:
#     runs-on: macos-latest
#     strategy:
#       matrix:
#         r-version: ['4.4.0', '4.2.3']  # 改為 4.2.3
#       fail-fast: false
#
#     steps:
#     - uses: actions/checkout@v3
#
#     - name: Update Homebrew
#       run: brew update
#
#     # - name: Install pandoc
#     #   run: |
#     #     for i in {1..3}
#     #     do
#     #       brew install pandoc && break || sleep 15
#     #     done
#
#     - name: Install gfortran and configure Makevars
#       run: |
#         brew install gcc
#         mkdir -p ~/.R
#         touch ~/.R/Makevars
#         echo "FC=$(brew --prefix)/bin/gfortran" >> ~/.R/Makevars
#         echo "F77=$(brew --prefix)/bin/gfortran" >> ~/.R/Makevars
#         echo "FLIBS=-L$(brew --prefix)/lib/gcc/current -lgfortran -lquadmath -lm" >> ~/.R/Makevars
#         echo "LDFLAGS=-L$(brew --prefix)/lib/gcc/current" >> ~/.R/Makevars
#
#     - name: Set up R ${{ matrix.r-version }}
#       uses: r-lib/actions/setup-r@v2
#       with:
#         r-version: ${{ matrix.r-version }}
#
#     - name: Install R dependencies
#       run: |
#         # 首先安裝基礎包
#         Rscript -e 'install.packages(c("remotes", "rcmdcheck", "reticulate", "renv"), repos="https://cran.r-project.org")'
#
#         # 根據 R 版本安裝相應的 Matrix 版本
#         Rscript -e '
#           if (getRversion() >= "4.4.0") {
#             remotes::install_version("Matrix", version = "1.5-3")
#           } else if (getRversion() >= "4.2.0" && getRversion() < "4.3.0") {
#             remotes::install_version("Matrix", version = "1.4-1")
#           } else {
#             remotes::install_version("Matrix", version = "1.5-1")
#           }
#         '
#
#         # 安裝其他依賴
#         Rscript -e 'install.packages(c("knitr", "rmarkdown", "lsa", "purrr", "testthat"), repos="https://cran.r-project.org")'
#
#         # 安裝特定版本的 htmltools
#         Rscript -e 'remotes::install_version("htmltools", version = "0.5.8")'
#
#         # renv 相關操作
#         Rscript -e '
#           tryCatch({
#             renv::restore()
#           }, error = function(e) {
#             message("Error in renv::restore(): ", e$message)
#             if (!requireNamespace("Matrix", quietly = TRUE)) {
#               if (getRversion() >= "4.4.0") {
#                 install.packages("Matrix")
#               } else if (getRversion() >= "4.2.0" && getRversion() < "4.3.0") {
#                 remotes::install_version("Matrix", version = "1.4-1")
#               } else {
#                 remotes::install_version("Matrix", version = "1.5-1")
#               }
#             }
#           })
#         '
#
#     - name: Set up Python
#       uses: actions/setup-python@v4  # 更新到 v4
#       with:
#         python-version: '3.10.x'
#         cache: 'pip'
#
#     - name: Install Python virtualenv
#       run: pip install virtualenv
#
#     - name: Create Python virtual environment
#       run: virtualenv flair_env
#
#     - name: Install Python dependencies in virtual environment
#       run: |
#         source flair_env/bin/activate
#         pip install --upgrade pip
#         pip install scipy==1.12.0
#         pip install flair
#         deactivate
#
#     - name: Remove Python cache files
#       run: find . -name '*.pyc' -delete
#
#     - name: Check (with virtual environment)
#       run: |
#         source flair_env/bin/activate
#         set -e
#         R CMD build --no-build-vignettes .
#       shell: bash

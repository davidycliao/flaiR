# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help

name: R-Python Integration and Test Coverage

on: [push, pull_request]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Check out repository
      uses: actions/checkout@v2

    - name: Set up R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.3.2'

    - name: Install R dependencies and Restore R environment
      run: |
        install.packages('renv')
        renv::restore()
        renv::install('covr')
      shell: Rscript {0}

    - name: Install testthat package
      run: Rscript -e 'install.packages("testthat")'
      shell: bash

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.10.x'

    - name: Create Python virtual environment using venv
      run: python -m venv flair_env

    - name: Install Python dependencies in virtual environment
      run: |
        source flair_env/bin/activate
        pip install torch
        pip install flair

    - name: Set Python Path for R reticulate
      run: |
        echo "RETICULATE_PYTHON=$(pwd)/flair_env/bin/python" >> $GITHUB_ENV
      shell: bash

    - name: Print RETICULATE_PYTHON value
      run: echo "RETICULATE_PYTHON=$RETICULATE_PYTHON"
      shell: bash

    - name: Check Python virtual environment structure
      run: |
        ls -l $(pwd)/flair_env/bin
      shell: bash

    - name: Run Test Coverage
      run: |
        source flair_env/bin/activate
        Rscript -e 'reticulate::use_virtualenv("/home/runner/work/flaiR/flaiR/flair_env", required = TRUE)'
        Rscript -e 'covr::codecov(
          quiet = FALSE,
          clean = FALSE,
          install_path = file.path(Sys.getenv("RUNNER_TEMP"), "flaiR")
        )'
      shell: bash


    - name: Show testthat output
      if: always()
      run: |
        find /home/runner/work/_temp/package -name 'testthat.Rout*' -exec cat '{}' \; || true
      shell: bash

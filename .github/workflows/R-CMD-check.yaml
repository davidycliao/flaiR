# name: R-CMD-check
#
# on:
#   push:
#     branches:
#       - master
#   pull_request:
#     branches:
#       - master
#
# jobs:
#   R-CMD-check:
#     runs-on: ubuntu-20.04
#     steps:
#       - name: Checkout repository
#         uses: actions/checkout@v2
#
#       # Install Python
#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: 3.8
#
#       # Create a Python virtual environment
#       - name: Set up Python venv
#         run: |
#           python -m venv env
#           source env/bin/activate
#           which python
#
#       # Install R and dependencies
#       - name: Setup R
#         uses: r-lib/actions/setup-r@v1
#         with:
#           r-version: release
#
#       # Install necessary Python packages (if any)
#       - name: Install Python dependencies
#         run: |
#           source env/bin/activate
#           pip install flair
#
#       # Install R dependencies
#       - name: Install R dependencies
#         run: |
#           install.packages(c('devtools', 'remotes'))
#           remotes::install_deps(dependencies = TRUE)
#
#       # Check the R package
#       - name: Check R package
#         run: |
#           source env/bin/activate
#           R CMD build . --no-build-vignettes
#           R CMD check *tar.gz --as-cran



on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

name: R-CMD-check

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}

    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      - name: Setup Python (Only on ubuntu-latest)
        if: matrix.config.os == 'ubuntu-latest'
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.x'

      - name: Install Python venv and dependencies (Only on ubuntu-latest)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-venv
          python -m venv ~/.venv
          echo "RETICULATE_PYTHON=~/.venv/bin/python" >> $GITHUB_ENV
          source ~/.venv/bin/activate
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Install reticulate (Only on ubuntu-latest)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          Rscript -e "install.packages('reticulate', repos = 'https://cloud.r-project.org/')"
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true

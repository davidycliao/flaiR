[{"path":"https://davidycliao.github.io/flaiR/articles/get_entities.html","id":"list-of-ner-models","dir":"Articles","previous_headings":"","what":"List of NER Models","title":"Tagging Named Entities with Flair Standard Models","text":"Source: https://flairnlp.github.io/docs/tutorial-basics/tagging-entities","code":""},{"path":[]},{"path":"https://davidycliao.github.io/flaiR/articles/get_entities.html","id":"generic-approach-using-get_entities","dir":"Articles","previous_headings":"An Example Using ner Model (Pre-trained NER English Model)","what":"Generic Approach Using get_entities()","title":"Tagging Named Entities with Flair Standard Models","text":"Use load_tagger_ner call NER pretrained model. model downloaded Flair’s Hugging Face repo. Thus, ensure internet connection. downloaded, model stored .flair cache device. , ’ve downloaded hasn’t manually removed, executing command trigger download. want computation run faster, recommended keep show.text_id set FALSE default.","code":"library(flaiR) #>  flaiR: An R Wrapper for Accessing Flair NLP Tagging Features #>  Python: 3.11 #>  Flair: 0.12.2 data(\"uk_immigration\") uk_immigration <- head(uk_immigration, 20) tagger_pos <- flaiR::load_tagger_ner(\"ner\") #> 2023-09-10 06:04:44,328 SequenceTagger predicts: Dictionary with 20 tags: <unk>, O, S-ORG, S-MISC, B-PER, E-PER, S-LOC, B-ORG, E-ORG, I-PER, S-PER, B-MISC, I-MISC, E-MISC, I-ORG, B-LOC, E-LOC, I-LOC, <START>, <STOP> time <- system.time({     results <- get_entities(uk_immigration$text,                             uk_immigration$speaker,                              tagger_pos)     gc() })   print(time) #>    user  system elapsed  #>  43.277   0.702  43.738 print(results) #>               doc_id                          entity  tag #>  1: Philip Hollobone                    Conservative  ORG #>  2: Philip Hollobone Liberal Democrat Front Benchers  ORG #>  3: Philip Hollobone                    Back Benches MISC #>  4: Philip Hollobone                       Kettering  LOC #>  5: Philip Hollobone                            Sikh MISC #>  6: Philip Hollobone                       Kettering  LOC #>  7: Philip Hollobone                       Kettering  LOC #>  8: Philip Hollobone                         British MISC #>  9: Philip Hollobone                  United Kingdom  LOC #> 10: Philip Hollobone                          Norman MISC #> 11: Philip Hollobone                  United Kingdom  LOC #> 12:  Stewart Jackson                          Friend  PER #> 13:  Stewart Jackson        Archbishop of Canterbury  ORG #> 14:  Stewart Jackson                           Carey  PER #> 15: Philip Hollobone                          Friend  PER #> 16: Philip Hollobone                  United Kingdom  LOC #> 17: Philip Hollobone                              UK  LOC #> 18: Philip Hollobone                          Europe  LOC #> 19: Philip Hollobone                           Malta  LOC #> 20:  Stewart Jackson                         Barking  LOC #> 21:  Stewart Jackson                        Dagenham  LOC #> 22:  Stewart Jackson                British National  ORG #> 23:  Stewart Jackson                    Conservative  ORG #> 24:  Stewart Jackson                          Friend  PER #> 25:  Stewart Jackson                      Folkestone  LOC #> 26:  Stewart Jackson                           Hythe  LOC #> 27:  Stewart Jackson                          Howard  PER #> 28: Philip Hollobone                          Friend  PER #> 29: Philip Hollobone                         Shipley  PER #> 30: Philip Hollobone                   Philip Davies  PER #> 31: Philip Hollobone                        Solihull  LOC #> 32: Philip Hollobone                     Lorely Burt  ORG #> 33: Philip Hollobone                    Peterborough  LOC #> 34: Philip Hollobone                         Jackson  PER #> 35: Philip Hollobone                          Friend  PER #> 36:    Philip Davies                          Friend  PER #> 37:    Philip Davies                      Government  ORG #> 38: Philip Hollobone                       Kettering  LOC #> 39: Philip Hollobone                      Government  ORG #> 40: Philip Hollobone                       Kettering  LOC #> 41: Philip Hollobone                       Kettering  LOC #> 42: Philip Hollobone               Migrationwatch UK  ORG #> 43: Philip Hollobone                      Carshalton  LOC #> 44: Philip Hollobone                      Wallington  LOC #> 45: Philip Hollobone                       Tom Brake  PER #> 46: Philip Hollobone                            <NA> <NA> #> 47:      Phil Woolas                       Gentleman  PER #> 48:      Phil Woolas                      Carshalton  LOC #> 49:      Phil Woolas                      Wallington  LOC #> 50:      Phil Woolas                       Tom Brake  PER #> 51: Philip Hollobone                            <NA> <NA> #> 52: Philip Hollobone                              UK  LOC #> 53:    Philip Davies                          Friend  PER #> 54:    Philip Davies                     Home Office  ORG #> 55:  Stewart Jackson                          Friend  PER #> 56:  Stewart Jackson                    Conservative  ORG #> 57:  Stewart Jackson                Australian-style MISC #> 58:  Stewart Jackson                              EU  ORG #> 59:  Stewart Jackson                          Friend  PER #> 60: Philip Hollobone                           Italy  LOC #> 61: Philip Hollobone                           Spain  LOC #> 62: Philip Hollobone                         Belgium  LOC #> 63: Philip Hollobone                           Italy  LOC #> 64: Philip Hollobone                          London  LOC #> 65: Philip Hollobone                              UK  LOC #> 66: Philip Hollobone                         Shipley  PER #> 67: Philip Hollobone                              UK  LOC #> 68: Philip Hollobone                              UK  LOC #> 69: Philip Hollobone                          Harrow  LOC #> 70: Philip Hollobone                         McNulty  PER #> 71: Philip Hollobone                           BBC 2  ORG #> 72: Philip Hollobone                       Kettering  LOC #> 73: Philip Hollobone                            <NA> <NA> #> 74:  Stewart Jackson                          Friend  PER #> 75:  Stewart Jackson                       Red Cross  ORG #> 76:  Stewart Jackson                         Darfuri MISC #> 77:  Stewart Jackson                     Zimbabweans MISC #> 78:  Stewart Jackson                       Red Cross  ORG #> 79: Philip Hollobone                          Friend  PER #> 80: Philip Hollobone                              UK  LOC #> 81:      Phil Woolas                          Geneva  LOC #> 82:      Phil Woolas                      Zimbabwean MISC #> 83:      Phil Woolas                      Zimbabwean MISC #>               doc_id                          entity  tag"},{"path":"https://davidycliao.github.io/flaiR/articles/get_entities.html","id":"batch-processing-using-get_entities_batch","dir":"Articles","previous_headings":"An Example Using ner Model (Pre-trained NER English Model)","what":"Batch Processing Using get_entities_batch()","title":"Tagging Named Entities with Flair Standard Models","text":"Comparing two sets timings, batch process slightly faster process without batching processing larger amount data.","code":"batch_process_time <- system.time({     batch_process_results  <- get_entities_batch(uk_immigration$text,                                                  uk_immigration$speaker,                                                   tagger_pos,                                                  batch_size = 5)     gc() }) #> CPU is used. print(batch_process_time) #>    user  system elapsed  #>  43.728   0.659  44.131 print(batch_process_results) #>               doc_id                          entity  tag #>  1: Philip Hollobone                    Conservative  ORG #>  2: Philip Hollobone Liberal Democrat Front Benchers  ORG #>  3: Philip Hollobone                    Back Benches MISC #>  4: Philip Hollobone                       Kettering  LOC #>  5: Philip Hollobone                            Sikh MISC #>  6: Philip Hollobone                       Kettering  LOC #>  7: Philip Hollobone                       Kettering  LOC #>  8: Philip Hollobone                         British MISC #>  9: Philip Hollobone                  United Kingdom  LOC #> 10: Philip Hollobone                          Norman MISC #> 11: Philip Hollobone                  United Kingdom  LOC #> 12:  Stewart Jackson                          Friend  PER #> 13:  Stewart Jackson        Archbishop of Canterbury  ORG #> 14:  Stewart Jackson                           Carey  PER #> 15: Philip Hollobone                          Friend  PER #> 16: Philip Hollobone                  United Kingdom  LOC #> 17: Philip Hollobone                              UK  LOC #> 18: Philip Hollobone                          Europe  LOC #> 19: Philip Hollobone                           Malta  LOC #> 20:  Stewart Jackson                         Barking  LOC #> 21:  Stewart Jackson                        Dagenham  LOC #> 22:  Stewart Jackson                British National  ORG #> 23:  Stewart Jackson                    Conservative  ORG #> 24:  Stewart Jackson                          Friend  PER #> 25:  Stewart Jackson                      Folkestone  LOC #> 26:  Stewart Jackson                           Hythe  LOC #> 27:  Stewart Jackson                          Howard  PER #> 28: Philip Hollobone                          Friend  PER #> 29: Philip Hollobone                         Shipley  PER #> 30: Philip Hollobone                   Philip Davies  PER #> 31: Philip Hollobone                        Solihull  LOC #> 32: Philip Hollobone                     Lorely Burt  ORG #> 33: Philip Hollobone                    Peterborough  LOC #> 34: Philip Hollobone                         Jackson  PER #> 35: Philip Hollobone                          Friend  PER #> 36:    Philip Davies                          Friend  PER #> 37:    Philip Davies                      Government  ORG #> 38: Philip Hollobone                       Kettering  LOC #> 39: Philip Hollobone                      Government  ORG #> 40: Philip Hollobone                       Kettering  LOC #> 41: Philip Hollobone                       Kettering  LOC #> 42: Philip Hollobone               Migrationwatch UK  ORG #> 43: Philip Hollobone                      Carshalton  LOC #> 44: Philip Hollobone                      Wallington  LOC #> 45: Philip Hollobone                       Tom Brake  PER #> 46: Philip Hollobone                            <NA> <NA> #> 47:      Phil Woolas                       Gentleman  PER #> 48:      Phil Woolas                      Carshalton  LOC #> 49:      Phil Woolas                      Wallington  LOC #> 50:      Phil Woolas                       Tom Brake  PER #> 51: Philip Hollobone                            <NA> <NA> #> 52: Philip Hollobone                              UK  LOC #> 53:    Philip Davies                          Friend  PER #> 54:    Philip Davies                     Home Office  ORG #> 55:  Stewart Jackson                          Friend  PER #> 56:  Stewart Jackson                    Conservative  ORG #> 57:  Stewart Jackson                Australian-style MISC #> 58:  Stewart Jackson                              EU  ORG #> 59:  Stewart Jackson                          Friend  PER #> 60: Philip Hollobone                           Italy  LOC #> 61: Philip Hollobone                           Spain  LOC #> 62: Philip Hollobone                         Belgium  LOC #> 63: Philip Hollobone                           Italy  LOC #> 64: Philip Hollobone                          London  LOC #> 65: Philip Hollobone                              UK  LOC #> 66: Philip Hollobone                         Shipley  PER #> 67: Philip Hollobone                              UK  LOC #> 68: Philip Hollobone                              UK  LOC #> 69: Philip Hollobone                          Harrow  LOC #> 70: Philip Hollobone                         McNulty  PER #> 71: Philip Hollobone                           BBC 2  ORG #> 72: Philip Hollobone                       Kettering  LOC #> 73: Philip Hollobone                            <NA> <NA> #> 74:  Stewart Jackson                          Friend  PER #> 75:  Stewart Jackson                       Red Cross  ORG #> 76:  Stewart Jackson                         Darfuri MISC #> 77:  Stewart Jackson                     Zimbabweans MISC #> 78:  Stewart Jackson                       Red Cross  ORG #> 79: Philip Hollobone                          Friend  PER #> 80: Philip Hollobone                              UK  LOC #> 81:      Phil Woolas                          Geneva  LOC #> 82:      Phil Woolas                      Zimbabwean MISC #> 83:      Phil Woolas                      Zimbabwean MISC #>               doc_id                          entity  tag time_difference <- time[\"elapsed\"] - batch_process_time[\"elapsed\"] print(time_difference) #> elapsed  #>  -0.393"},{"path":"https://davidycliao.github.io/flaiR/articles/get_pos.html","id":"list-of-part-of-speech-tagging-models","dir":"Articles","previous_headings":"","what":"List of Part-of-Speech Tagging Models","title":"Tagging Part-of-Speech Tagging with Flair Standard Models","text":"Source: https://flairnlp.github.io/docs/tutorial-basics/part--speech-tagging","code":""},{"path":"https://davidycliao.github.io/flaiR/articles/get_pos.html","id":"an-example-using-pos-fast-part-of-speech-tagging","dir":"Articles","previous_headings":"","what":"An Example Using pos-fast Part-of-Speech Tagging","title":"Tagging Part-of-Speech Tagging with Flair Standard Models","text":"Download de-pos part--speech tagging model FlairNLP Hugging Face.","code":"library(flaiR) #>  flaiR: An R Wrapper for Accessing Flair NLP Tagging Features #>  Python: 3.11 #>  Flair: 0.12.2 data(\"de_immigration\") de_immigration <- head(de_immigration, 2) tagger_pos <- load_tagger_pos(\"de-pos\") #> 2023-09-10 06:06:21,700 SequenceTagger predicts: Dictionary with 58 tags: <unk>, O, APPR, ART, ADJA, NN, VVFIN, PIS, NE, FM, $,, KON, $., CARD, APPRART, $(, PROAV, KOUS, PPER, ADV, VVINF, VAFIN, VMFIN, ADJD, PTKVZ, PTKNEG, KOKOM, PIDAT, PIAT, VVPP, PRF, PTKA, TRUNC, PPOSAT, VVIZU, PTKZU, VAINF, VMINF, PWAV, PDAT, PRELS, KOUI, APPO, VAPP, PWAT, PWS, VVIMP, APZR, PDS, PRELAT results <- get_pos(de_immigration$text,                     de_immigration$speaker, tagger_pos,                     show.text_id = FALSE,                    gc.active = TRUE) #> Garbage collection after processing all texts print(results) #>              doc_id token_id text_id   token    tag precision #>    1: Helmut Brandt        0      NA      In   APPR    1.0000 #>    2: Helmut Brandt        1      NA   ihrem PPOSAT    1.0000 #>    3: Helmut Brandt        2      NA  Antrag     NN    1.0000 #>    4: Helmut Brandt        3      NA fordert  VVFIN    1.0000 #>    5: Helmut Brandt        4      NA     die    ART    1.0000 #>   ---                                                         #> 2239:  Rüdiger Veit     1005      NA      90   CARD    1.0000 #> 2240:  Rüdiger Veit     1006      NA       /     $(    0.9986 #> 2241:  Rüdiger Veit     1007      NA     Die    ART    1.0000 #> 2242:  Rüdiger Veit     1008      NA  Grünen     NN    0.9984 #> 2243:  Rüdiger Veit     1009      NA       .     $.    1.0000"},{"path":"https://davidycliao.github.io/flaiR/articles/get_sentiments.html","id":"list-of-sentiment-models","dir":"Articles","previous_headings":"","what":"List of Sentiment Models","title":"Tagging Sentiment with Flair Standard Models","text":"Source: https://flairnlp.github.io/docs/tutorial-basics/tagging-sentiment","code":""},{"path":"https://davidycliao.github.io/flaiR/articles/get_sentiments.html","id":"an-example-using-sentiment-model-pre-trained-english-model","dir":"Articles","previous_headings":"","what":"An Example Using sentiment Model (Pre-trained English Model)","title":"Tagging Sentiment with Flair Standard Models","text":"Download English sentiment model FlairNLP Hugging Face. Currently, also supports large English sentiment model German pre-trained model.","code":"library(flaiR) #>  flaiR: An R Wrapper for Accessing Flair NLP Tagging Features #>  Python: 3.11 #>  Flair: 0.12.2 data(\"uk_immigration\") uk_immigration <- head(uk_immigration, 5) tagger_sent <- load_tagger_sentiments(\"sentiment\") results <- get_sentiments(uk_immigration$text, seq_len(nrow(uk_immigration)), tagger_sent)  print(results) #>    doc_id sentiment     score #> 1:      1  POSITIVE 0.8097585 #> 2:      2  POSITIVE 0.9990165 #> 3:      3  POSITIVE 0.8827487 #> 4:      4  NEGATIVE 0.9997155 #> 5:      5  POSITIVE 0.8604354"},{"path":"https://davidycliao.github.io/flaiR/articles/quickstart.html","id":"install-flair-with-using-remotes","dir":"Articles","previous_headings":"","what":"Install flaiR with Using remotes","title":"Quick Start","text":"flaiR built top reticulate package incorporates key features Flair library, returning data tidy efficientdata.table format. installation consists two parts: First, install Python 3.7 higher, thereticulate package R. Additionally, ’ll also need Anaconda assist reticulate setting Python environment, well enabling RStudio identify environment. first time using Python-related packages like flair R (flaiR), ’s highly likely haven’t yet installed Conda environment. loading flaiR R, automatically goes two steps. First, creates conda environment called r-reticulate, ’ll see lot messages related installation Python environment. Afterward, see message “Virtual environment ‘r-reticulate’ successfully created.” Next, prompted confirm whether want use r-reticulate. Enter “Yes,” automatically install Python flaiR.  ","code":"install.packages(\"remotes\") remotes::install_github(\"davidycliao/flaiR\", force = TRUE) library(flaiR) flaiR: An R Wrapper for Accessing Flair NLP Tagging Features        Python : 3.11 Python : 3.11                                             Flair: ✗                                       Flair is installing from Python"},{"path":[]},{"path":"https://davidycliao.github.io/flaiR/articles/quickstart.html","id":"tagging-parts-of-speech-with-flair-models","dir":"Articles","previous_headings":"Quick Use","what":"Tagging Parts-of-Speech with Flair Models","title":"Quick Start","text":"Load pretrained model “pos-fast”. pretrained models, see https://flairnlp.github.io/docs/tutorial-basics/part--speech-tagging#--english.","code":"texts <- c(\"UCD is one of the best universities in Ireland.\",            \"UCD has a good campus but is very far from my apartment in Dublin.\",            \"Essex is famous for social science research.\",            \"Essex is not in the Russell Group, but it is famous for political science research and in 1994 Group.\",            \"TCD is the oldest university in Ireland.\",            \"TCD is similar to Oxford.\")  doc_ids <- c(\"doc1\", \"doc2\", \"doc3\", \"doc4\", \"doc5\", \"doc6\") library(flaiR) #>  flaiR: An R Wrapper for Accessing Flair NLP Tagging Features #>  Python: 3.11 #>  Flair: 0.12.2 tagger_pos <- load_tagger_pos(\"pos-fast\") #> 2023-09-10 06:07:28,584 SequenceTagger predicts: Dictionary with 53 tags: <unk>, O, UH, ,, VBD, PRP, VB, PRP$, NN, RB, ., DT, JJ, VBP, VBG, IN, CD, NNS, NNP, WRB, VBZ, WDT, CC, TO, MD, VBN, WP, :, RP, EX, JJR, FW, XX, HYPH, POS, RBR, JJS, PDT, NNPS, RBS, AFX, WP$, -LRB-, -RRB-, ``, '', LS, $, SYM, ADD results <- get_pos(texts, doc_ids, tagger_pos) head(results, n = 10) #>     doc_id token_id text_id        token tag precision #>  1:   doc1        0      NA          UCD NNP    0.9967 #>  2:   doc1        1      NA           is VBZ    1.0000 #>  3:   doc1        2      NA          one  CD    0.9993 #>  4:   doc1        3      NA           of  IN    1.0000 #>  5:   doc1        4      NA          the  DT    1.0000 #>  6:   doc1        5      NA         best JJS    0.9988 #>  7:   doc1        6      NA universities NNS    0.9997 #>  8:   doc1        7      NA           in  IN    1.0000 #>  9:   doc1        8      NA      Ireland NNP    1.0000 #> 10:   doc1        9      NA            .   .    0.9998"},{"path":"https://davidycliao.github.io/flaiR/articles/quickstart.html","id":"tagging-entities-with-flair-models","dir":"Articles","previous_headings":"Quick Use","what":"Tagging Entities with Flair Models","title":"Quick Start","text":"Load pretrained model “ner”. pretrained models, see https://flairnlp.github.io/docs/tutorial-basics/tagging-entities.","code":"library(flaiR) tagger_ner <- load_tagger_ner(\"ner\") #> 2023-09-10 06:07:29,815 SequenceTagger predicts: Dictionary with 20 tags: <unk>, O, S-ORG, S-MISC, B-PER, E-PER, S-LOC, B-ORG, E-ORG, I-PER, S-PER, B-MISC, I-MISC, E-MISC, I-ORG, B-LOC, E-LOC, I-LOC, <START>, <STOP> results <- get_entities(texts, doc_ids, tagger_ner) head(results, n = 10) #>     doc_id        entity tag #>  1:   doc1           UCD ORG #>  2:   doc1       Ireland LOC #>  3:   doc2           UCD ORG #>  4:   doc2        Dublin LOC #>  5:   doc3         Essex ORG #>  6:   doc4         Essex ORG #>  7:   doc4 Russell Group ORG #>  8:   doc5           TCD ORG #>  9:   doc5       Ireland LOC #> 10:   doc6           TCD ORG"},{"path":"https://davidycliao.github.io/flaiR/articles/quickstart.html","id":"tagging-sentiment","dir":"Articles","previous_headings":"Quick Use","what":"Tagging Sentiment","title":"Quick Start","text":"Load pretrained model “sentiment”. pre-trained models “sentiment”, “sentiment-fast”, “de-offensive-language” currently available. pretrained models, see https://flairnlp.github.io/docs/tutorial-basics/tagging-sentiment.  ","code":"library(flaiR) tagger_sent <- load_tagger_sentiments(\"sentiment\") results <- get_sentiments(texts, doc_ids, tagger_sent) head(results, n = 10) #>    doc_id sentiment     score #> 1:   doc1  POSITIVE 0.9970598 #> 2:   doc2  NEGATIVE 0.8472336 #> 3:   doc3  POSITIVE 0.9928006 #> 4:   doc4  POSITIVE 0.9901405 #> 5:   doc5  POSITIVE 0.9952670 #> 6:   doc6  POSITIVE 0.9291794"},{"path":"https://davidycliao.github.io/flaiR/articles/quickstart.html","id":"how-to-contribute","dir":"Articles","previous_headings":"","what":"How to Contribute","title":"Quick Start","text":"Contributions form comments, code suggestions, tutorial examples welcome. Please note flaiR released Contributor Code Conduct. contributing project, agree abide terms.","code":""},{"path":"https://davidycliao.github.io/flaiR/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"David Liao. Maintainer, author. Akbik Alan. Author, contributor. Blythe Duncan. Author, contributor. Vollgraf Roland. Author, contributor.","code":""},{"path":"https://davidycliao.github.io/flaiR/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Liao D, Alan , Duncan B, Roland V (2023). flaiR: R Wrapper Accessing Flair NLP Tagging Features. R package version 0.0.3.","code":"@Manual{,   title = {flaiR: An R Wrapper for Accessing Flair NLP Tagging Features},   author = {David Liao and Akbik Alan and Blythe Duncan and Vollgraf Roland},   year = {2023},   note = {R package version 0.0.3}, }"},{"path":"https://davidycliao.github.io/flaiR/index.html","id":"flairr-an-r-wrapper-for-accessing-flair-nlp-tagging-features-","dir":"","previous_headings":"","what":"flairR: An R Wrapper for Accessing Flair NLP Tagging Features","title":"An R Wrapper for Accessing Flair NLP Tagging Features","text":"flaiR FlairNLP tool R users, particularly social sciences. offers streamlined access core features FlairNLP Python. FlairNLP advanced NLP framework incorporates latest techniques developed Humboldt University Berlin. deeper understanding Flair’s architecture, refer research article ‘Contextual String Embeddings Sequence Labeling’ official mannual Python. features currently available flairR include part--speech tagging, transformer-based sentiment analysis, named entity recognition. flairR returns tagging information directly data.table format. ’s worth noting using transformer-based pre-trained model FlairNLP can computationally intensive. Therefore, implementing parallel computing R recommended enhance performance tasks. Main Features:","code":""},{"path":"https://davidycliao.github.io/flaiR/index.html","id":"installation-via-github","dir":"","previous_headings":"flairR: An R Wrapper for Accessing Flair NLP Tagging Features","what":"Installation via GitHub","title":"An R Wrapper for Accessing Flair NLP Tagging Features","text":"installation consists two parts: First, install Python 3.7 higher, reticulate package R. Additionally, ’ll also need Anaconda assist reticulate setting Python environment via Rstudio, well enabling R identify conda environment.","code":"install.packages(\"remotes\") remotes::install_github(\"davidycliao/flaiR\", force = TRUE) library(flaiR) flaiR: An R Wrapper for Accessing Flair NLP Tagging Features        Python: 3.11                                             Flair: 0.12.2"},{"path":"https://davidycliao.github.io/flaiR/index.html","id":"citing-the-contributions-of-flair","dir":"","previous_headings":"flairR: An R Wrapper for Accessing Flair NLP Tagging Features","what":"Citing the Contributions of Flair","title":"An R Wrapper for Accessing Flair NLP Tagging Features","text":"use tool academic research, recommend citing research article, Contextual String Embeddings Sequence Labeling Flair research team.","code":"@inproceedings{akbik2018coling,   title={Contextual String Embeddings for Sequence Labeling},   author={Akbik, Alan and Blythe, Duncan and Vollgraf, Roland},   booktitle = {{COLING} 2018, 27th International Conference on Computational Linguistics},   pages     = {1638--1649},   year      = {2018} }"},{"path":"https://davidycliao.github.io/flaiR/reference/check_and_gc.html","id":null,"dir":"Reference","previous_headings":"","what":"Perform Garbage Collection Based on Condition — check_and_gc","title":"Perform Garbage Collection Based on Condition — check_and_gc","text":"function checks value `gc.active` determine whether perform garbage collection. `gc.active` `TRUE`, function perform garbage collection send message indicating completion process.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_and_gc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Perform Garbage Collection Based on Condition — check_and_gc","text":"","code":"check_and_gc(gc.active)"},{"path":"https://davidycliao.github.io/flaiR/reference/check_and_gc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Perform Garbage Collection Based on Condition — check_and_gc","text":"gc.active logical value indicating whether activate garbage collection.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_and_gc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Perform Garbage Collection Based on Condition — check_and_gc","text":"message indicating garbage collection performed `gc.active` `TRUE`. Otherwise, action taken message displayed.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_batch_size.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the specified batch size — check_batch_size","title":"Check the specified batch size — check_batch_size","text":"Validates given batch size positive integer.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_batch_size.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the specified batch size — check_batch_size","text":"","code":"check_batch_size(batch_size)"},{"path":"https://davidycliao.github.io/flaiR/reference/check_batch_size.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the specified batch size — check_batch_size","text":"batch_size Integer. batch size checked.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_device.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the specified device for PyTorch — check_device","title":"Check the specified device for PyTorch — check_device","text":"function verifies specified device available PyTorch. CUDA available, message shown.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_device.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the specified device for PyTorch — check_device","text":"","code":"check_device(device)"},{"path":"https://davidycliao.github.io/flaiR/reference/check_device.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the specified device for PyTorch — check_device","text":"device Character. device set PyTorch.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_flair_installed.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Flair — check_flair_installed","title":"Check Flair — check_flair_installed","text":"Determines Flair Python module available current Python environment.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_flair_installed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Flair — check_flair_installed","text":"","code":"check_flair_installed(...)"},{"path":"https://davidycliao.github.io/flaiR/reference/check_flair_installed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Flair — check_flair_installed","text":"Logical. `TRUE` Flair installed, otherwise `FALSE`.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_language_supported.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the Given Language Models against Supported Languages Models — check_language_supported","title":"Check the Given Language Models against Supported Languages Models — check_language_supported","text":"function checks whether provided language supported. , stops execution returns message indicating supported languages.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_language_supported.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the Given Language Models against Supported Languages Models — check_language_supported","text":"","code":"check_language_supported(language, supported_lan_models)"},{"path":"https://davidycliao.github.io/flaiR/reference/check_language_supported.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the Given Language Models against Supported Languages Models — check_language_supported","text":"language language check. supported_lan_models vector supported languages.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_language_supported.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the Given Language Models against Supported Languages Models — check_language_supported","text":"function return anything, stops execution check fails.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_language_supported.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the Given Language Models against Supported Languages Models — check_language_supported","text":"","code":"# Assuming 'en' is a supported language and 'abc' is not: check_language_supported(\"en\", c(\"en\", \"de\", \"fr\")) # check_language_supported(\"abc\", c(\"en\", \"de\", \"fr\")) # will stop execution"},{"path":"https://davidycliao.github.io/flaiR/reference/check_prerequisites.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Environment Pre-requisites — check_prerequisites","title":"Check Environment Pre-requisites — check_prerequisites","text":"function checks Python installed, flair module available Python, active internet connection.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_prerequisites.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Environment Pre-requisites — check_prerequisites","text":"","code":"check_prerequisites(...)"},{"path":"https://davidycliao.github.io/flaiR/reference/check_prerequisites.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Environment Pre-requisites — check_prerequisites","text":"... passing additional arguments.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_prerequisites.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check Environment Pre-requisites — check_prerequisites","text":"message detailing missing pre-requisites.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_python_installed.html","id":null,"dir":"Reference","previous_headings":"","what":"Check for Available Python Installation — check_python_installed","title":"Check for Available Python Installation — check_python_installed","text":"function checks environment installed R system.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_python_installed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check for Available Python Installation — check_python_installed","text":"","code":"check_python_installed(...)"},{"path":"https://davidycliao.github.io/flaiR/reference/check_python_installed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check for Available Python Installation — check_python_installed","text":"... param run.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_python_installed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check for Available Python Installation — check_python_installed","text":"Logical. `TRUE` Python installed, `FALSE` otherwise. Additionally, installed, path Python installation printed.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_show.text_id.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the `show.text_id` parameter — check_show.text_id","title":"Check the `show.text_id` parameter — check_show.text_id","text":"Validates given `show.text_id` logical value.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_show.text_id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the `show.text_id` parameter — check_show.text_id","text":"","code":"check_show.text_id(show.text_id)"},{"path":"https://davidycliao.github.io/flaiR/reference/check_show.text_id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the `show.text_id` parameter — check_show.text_id","text":"show.text_id Logical. parameter checked.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_texts_and_ids.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the texts and document IDs — check_texts_and_ids","title":"Check the texts and document IDs — check_texts_and_ids","text":"Validates given texts document IDs NULL empty.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/check_texts_and_ids.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the texts and document IDs — check_texts_and_ids","text":"","code":"check_texts_and_ids(texts, doc_ids)"},{"path":"https://davidycliao.github.io/flaiR/reference/check_texts_and_ids.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the texts and document IDs — check_texts_and_ids","text":"texts List. list texts. doc_ids List. list document IDs.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/clear_flair_cache.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear Flair Cache — clear_flair_cache","title":"Clear Flair Cache — clear_flair_cache","text":"function clears cache associated Flair Python library. cache directory typically located \"~/.flair\".","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/clear_flair_cache.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear Flair Cache — clear_flair_cache","text":"","code":"clear_flair_cache(...)"},{"path":"https://davidycliao.github.io/flaiR/reference/clear_flair_cache.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Clear Flair Cache — clear_flair_cache","text":"... argument passed next.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/clear_flair_cache.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear Flair Cache — clear_flair_cache","text":"Returns NULL invisibly. Messages printed indicating whether cache found cleared.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/clear_flair_cache.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear Flair Cache — clear_flair_cache","text":"","code":"if (FALSE) { clear_flair_cache() }"},{"path":"https://davidycliao.github.io/flaiR/reference/create_flair_env.html","id":null,"dir":"Reference","previous_headings":"","what":"Create or use Python environment for Flair — create_flair_env","title":"Create or use Python environment for Flair — create_flair_env","text":"function checks whether Flair Python library installed current Python environment. , attempts install either current conda environment creates new one.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/create_flair_env.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create or use Python environment for Flair — create_flair_env","text":"","code":"create_flair_env(env = \"r-reticulate\")"},{"path":"https://davidycliao.github.io/flaiR/reference/create_flair_env.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create or use Python environment for Flair — create_flair_env","text":"env name conda environment used created (default \"r-reticulate\").","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/create_flair_env.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create or use Python environment for Flair — create_flair_env","text":"Nothing returned. function primarily ensures Python library Flair installed available.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/de_immigration.html","id":null,"dir":"Reference","previous_headings":"","what":"German Bundestag Immigration Debate Data — de_immigration","title":"German Bundestag Immigration Debate Data — de_immigration","text":"dataset containing speeches debates German Bundestag topic immigration.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/de_immigration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"German Bundestag Immigration Debate Data — de_immigration","text":"","code":"data(\"de_immigration\")"},{"path":"https://davidycliao.github.io/flaiR/reference/de_immigration.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"German Bundestag Immigration Debate Data — de_immigration","text":"data frame 16 variables: date Date speech, Date type agenda Agenda subject speech, character speechnumber Unique identifier speech, numeric speaker Name person giving speech, character party Political party speaker, character party.facts.id ID party, usually numeric character chair Person chairing session, character terms Terms tags associated speech, character list text Actual text speech, character parliament Bundestag session, character numeric iso3country ISO3 country code Germany, character year Year speech made, numeric agenda_ID Unique identifier agenda, usually numeric    character migration_dummy Dummy variable related migration topic,   usually numeric (0 1) comment_agenda Additional comments agenda, character","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/de_immigration.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"German Bundestag Immigration Debate Data — de_immigration","text":"Describe source data .","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/de_immigration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"German Bundestag Immigration Debate Data — de_immigration","text":"","code":"if (FALSE) { data(de_immigration) head(de_immigration) }"},{"path":"https://davidycliao.github.io/flaiR/reference/dot-onAttach.html","id":null,"dir":"Reference","previous_headings":"","what":".onAttach Function for the flaiR Package — .onAttach","title":".onAttach Function for the flaiR Package — .onAttach","text":"function called flaiR package loaded. provides messages detailing versions Python Flair used, well package details.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/dot-onAttach.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":".onAttach Function for the flaiR Package — .onAttach","text":"","code":".onAttach(...)"},{"path":"https://davidycliao.github.io/flaiR/reference/get_entities.html","id":null,"dir":"Reference","previous_headings":"","what":"Tagging Named Entities with Flair Models — get_entities","title":"Tagging Named Entities with Flair Models — get_entities","text":"function takes texts corresponding document IDs inputs, uses Flair NLP library extract named entities, returns dataframe identified entities along tags. entities detected text, function returns data table NA values. might clutter results. Depending use case, might decide either keep behavior skip rows detected entities.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_entities.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tagging Named Entities with Flair Models — get_entities","text":"","code":"get_entities(   texts,   doc_ids,   tagger = NULL,   language = NULL,   show.text_id = FALSE,   gc.active = FALSE )"},{"path":"https://davidycliao.github.io/flaiR/reference/get_entities.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tagging Named Entities with Flair Models — get_entities","text":"texts character vector containing texts process. doc_ids character numeric vector containing document IDs corresponding text. tagger optional tagger object. NULL (default), function load Flair tagger based specified language. language character string indicating language model load. Default \"en\". show.text_id logical value. TRUE, includes actual text entity extracted resulting data table. Useful verification traceability purposes might increase size output. Default FALSE. gc.active logical value. TRUE, runs garbage collector processing texts. can help freeing memory releasing unused memory space, especially processing large number texts. Default FALSE.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_entities.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tagging Named Entities with Flair Models — get_entities","text":"data table columns: doc_id ID document entity extracted. text_id TRUE, actual text entity   extracted. entity named entity extracted text. tag tag category named entity. Common tags include:   PERSON (names individuals),   ORG (organizations, institutions),   GPE (countries, cities, states),   LOCATION (mountain ranges, bodies water),   DATE (dates periods),   TIME (times day),   MONEY (monetary values),   PERCENT (percentage values),   FACILITY (buildings, airports),   PRODUCT (objects, vehicles),   EVENT (named events like wars sports events),   ART (titles books)","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_entities.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tagging Named Entities with Flair Models — get_entities","text":"","code":"if (FALSE) { library(reticulate) library(fliaR)  texts <- c(\"UCD is one of the best universities in Ireland.\",            \"UCD has a good campus but is very far from            my apartment in Dublin.\",            \"Essex is famous for social science research.\",            \"Essex is not in the Russell Group, but it is            famous for political science research.\",            \"TCD is the oldest university in Ireland.\",            \"TCD is similar to Oxford.\") doc_ids <- c(\"doc1\", \"doc2\", \"doc3\", \"doc4\", \"doc5\", \"doc6\") # Load NER (\"ner\") model tagger_ner <- load_tagger_ner('ner') results <- get_entities(texts, doc_ids, tagger_ner) print(results)}"},{"path":"https://davidycliao.github.io/flaiR/reference/get_entities_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Named Entities from a Batch of Texts — get_entities_batch","title":"Extract Named Entities from a Batch of Texts — get_entities_batch","text":"function processes batches texts extracts named entities.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_entities_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Named Entities from a Batch of Texts — get_entities_batch","text":"","code":"get_entities_batch(   texts,   doc_ids,   tagger = NULL,   language = \"en\",   show.text_id = FALSE,   gc.active = FALSE,   batch_size = 5,   device = \"cpu\" )"},{"path":"https://davidycliao.github.io/flaiR/reference/get_entities_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Named Entities from a Batch of Texts — get_entities_batch","text":"texts character vector texts process. doc_ids vector document IDs corresponding text. tagger pre-loaded Flair NER tagger. Default NULL, tagger loaded based provided language. language character string specifying language texts. Default \"en\" (English). show.text_id Logical, whether include text ID output. Default FALSE. gc.active Logical, whether activate garbage collection processing batch. Default FALSE. batch_size integer specifying size batch. Default 5. device character string specifying computation device. can either \"cpu\" string representation GPU device number. instance, \"0\" corresponds first GPU. GPU device number provided, attempt use GPU. default \"cpu\". \"cuda\" \"cuda:0\"Refers first GPU system.       one GPU, specifying \"cuda\" \"cuda:0\" allocate       computations GPU. \"cuda:1\"Refers second GPU system, allowing allocation       specific computations GPU. \"cuda:2\"Refers third GPU system, systems       GPUs.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_entities_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Named Entities from a Batch of Texts — get_entities_batch","text":"data.table containing extracted entities, corresponding tags, document IDs.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_entities_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Named Entities from a Batch of Texts — get_entities_batch","text":"","code":"if (FALSE) { library(reticulate) library(fliaR)  texts <- c(\"UCD is one of the best universities in Ireland.\",            \"UCD has a good campus but is very far from            my apartment in Dublin.\",            \"Essex is famous for social science research.\",            \"Essex is not in the Russell Group, but it is            famous for political science research.\",            \"TCD is the oldest university in Ireland.\",            \"TCD is similar to Oxford.\") doc_ids <- c(\"doc1\", \"doc2\", \"doc3\", \"doc4\", \"doc5\", \"doc6\") # Load NER (\"ner\") model tagger_ner <- load_tagger_ner('ner') results <- get_entities_batch(texts, doc_ids, tagger_ner) print(results)}"},{"path":"https://davidycliao.github.io/flaiR/reference/get_flair_version.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve Flair Version — get_flair_version","title":"Retrieve Flair Version — get_flair_version","text":"Gets version installed Flair module current Python environment.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_flair_version.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve Flair Version — get_flair_version","text":"","code":"get_flair_version(...)"},{"path":"https://davidycliao.github.io/flaiR/reference/get_flair_version.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve Flair Version — get_flair_version","text":"Character string representing version Flair. Flair installed, may return `NULL` cause error (based `reticulate` behavior).","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Tagging Part-of-Speech Tagging with Flair Models — get_pos","title":"Tagging Part-of-Speech Tagging with Flair Models — get_pos","text":"function returns data table POS tags related  data given texts.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tagging Part-of-Speech Tagging with Flair Models — get_pos","text":"","code":"get_pos(   texts,   doc_ids,   tagger = NULL,   language = NULL,   show.text_id = FALSE,   gc.active = FALSE )"},{"path":"https://davidycliao.github.io/flaiR/reference/get_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tagging Part-of-Speech Tagging with Flair Models — get_pos","text":"texts character vector containing texts processed. doc_ids character vector containing document ids. tagger tagger object (default NULL). language language texts (default NULL). show.text_id logical value. TRUE, includes actual text entity extracted resulting data table. Useful verification traceability purposes might increase size output. Default FALSE. gc.active logical value. TRUE, runs garbage collector processing texts. can help freeing memory releasing unused memory space, especially processing large number texts. Default FALSE.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tagging Part-of-Speech Tagging with Flair Models — get_pos","text":"data.table containing following columns: doc_id document identifier corresponding text. token_id token number original text,   indicating position token. text_id actual text input passed function. token individual word token text   POS tagged. tag part--speech tag assigned token   Flair library. precision confidence score (numeric)   assigned POS tag.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_pos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tagging Part-of-Speech Tagging with Flair Models — get_pos","text":"","code":"if (FALSE) { library(reticulate) library(fliaR) tagger_pos_fast <- load_tagger_pos('pos-fast') texts <- c(\"UCD is one of the best universities in Ireland.\",            \"Essex is not in the Russell Group, but it is famous for political science research.\",            \"TCD is the oldest university in Ireland.\") doc_ids <- c(\"doc1\", \"doc2\", \"doc3\")  get_pos(texts, doc_ids, tagger_pos_fast) }"},{"path":"https://davidycliao.github.io/flaiR/reference/get_pos_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Process of Part-of-Speech Tagging — get_pos_batch","title":"Batch Process of Part-of-Speech Tagging — get_pos_batch","text":"function returns data table POS tags related data given texts using batch processing.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_pos_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Process of Part-of-Speech Tagging — get_pos_batch","text":"","code":"get_pos_batch(   texts,   doc_ids,   tagger = NULL,   language = NULL,   show.text_id = FALSE,   gc.active = FALSE,   batch_size = 5,   device = \"cpu\" )"},{"path":"https://davidycliao.github.io/flaiR/reference/get_pos_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Process of Part-of-Speech Tagging — get_pos_batch","text":"texts character vector containing texts processed. doc_ids character vector containing document ids. tagger tagger object (default NULL). language language texts (default NULL). show.text_id logical value. TRUE, includes actual text entity extracted resulting data table. Useful verification traceability purposes might increase size output. Default FALSE. gc.active logical value. TRUE, runs garbage collector processing texts. can help freeing memory releasing unused memory space, especially processing large number texts. Default FALSE. batch_size integer specifying size batch. Default 5. device character string specifying computation device. can either \"cpu\" string representation GPU device number. instance, \"0\" corresponds first GPU. GPU device number provided, attempt use GPU. default \"cpu\". \"cuda\" \"cuda:0\"Refers first GPU system.       one GPU, specifying \"cuda\" \"cuda:0\" allocate       computations GPU. \"cuda:1\"Refers second GPU system, allowing allocation       specific computations GPU. \"cuda:2\"Refers third GPU system, systems       GPUs.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_pos_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Process of Part-of-Speech Tagging — get_pos_batch","text":"data.table containing following columns: doc_id document identifier corresponding text. token_id token number original text,   indicating position token. text_id actual text input passed function (show.text_id TRUE). token individual word token text   POS tagged. tag part--speech tag assigned token   Flair library. precision confidence score (numeric)   assigned POS tag.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_pos_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch Process of Part-of-Speech Tagging — get_pos_batch","text":"","code":"if (FALSE) { library(reticulate) library(fliaR) tagger_pos_fast <- load_tagger_pos('pos-fast') texts <- c(\"UCD is one of the best universities in Ireland.\",            \"Essex is not in the Russell Group, but it is famous for political science research.\",            \"TCD is the oldest university in Ireland.\") doc_ids <- c(\"doc1\", \"doc2\", \"doc3\")  # Using the batch_size parameter get_pos_batch(texts, doc_ids, tagger_pos_fast, batch_size = 2) }"},{"path":"https://davidycliao.github.io/flaiR/reference/get_sentiments.html","id":null,"dir":"Reference","previous_headings":"","what":"Tagging Sentiment with Flair Standard Models — get_sentiments","title":"Tagging Sentiment with Flair Standard Models — get_sentiments","text":"function takes texts associated document IDs predict sentiments using flair Python library.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_sentiments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tagging Sentiment with Flair Standard Models — get_sentiments","text":"","code":"get_sentiments(   texts,   doc_ids,   tagger = NULL,   ...,   language = NULL,   show.text_id = FALSE,   gc.active = FALSE )"},{"path":"https://davidycliao.github.io/flaiR/reference/get_sentiments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tagging Sentiment with Flair Standard Models — get_sentiments","text":"texts list vector texts sentiment prediction made. doc_ids list vector document IDs corresponding texts. tagger optional flair sentiment model. NULL (default), function loads default model based language. ... Additional arguments passed next. language character string indicating language texts.  Currently supports \"sentiment\" (English), \"sentiment-fast\" (English), \"de-offensive-language\" (German) show.text_id logical value. TRUE, includes actual text sentiment predicted. Default FALSE. gc.active logical value. TRUE, runs garbage collector processing texts. can help freeing memory releasing unused memory space, especially processing large number texts. Default FALSE.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_sentiments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tagging Sentiment with Flair Standard Models — get_sentiments","text":"data.table containing three columns:  doc_id: document ID input. sentiment: Predicted sentiment text. score: Score sentiment prediction.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_sentiments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tagging Sentiment with Flair Standard Models — get_sentiments","text":"","code":"if (FALSE) { library(flaiR) texts <- c(\"UCD is one of the best universities in Ireland.\",            \"UCD has a good campus but is very far from my apartment in Dublin.\",            \"Essex is famous for social science research.\",            \"Essex is not in the Russell Group, but it is famous for political science research.\",            \"TCD is the oldest university in Ireland.\",            \"TCD is similar to Oxford.\")  doc_ids <- c(\"doc1\", \"doc2\", \"doc3\", \"doc4\", \"doc5\", \"doc6\")  # Load re-trained sentiment (\"sentiment\") model tagger_sent <- load_tagger_sentiments('sentiment')  results <- get_sentiments(texts, doc_ids, tagger_sent) print(results) }"},{"path":"https://davidycliao.github.io/flaiR/reference/get_sentiments_batch.html","id":null,"dir":"Reference","previous_headings":"","what":"Batch Process of Tagging Sentiment with Flair Models — get_sentiments_batch","title":"Batch Process of Tagging Sentiment with Flair Models — get_sentiments_batch","text":"function takes texts associated document IDs predict sentiments using flair Python library.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_sentiments_batch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Batch Process of Tagging Sentiment with Flair Models — get_sentiments_batch","text":"","code":"get_sentiments_batch(   texts,   doc_ids,   tagger = NULL,   ...,   language = NULL,   show.text_id = FALSE,   gc.active = FALSE,   batch_size = 5,   device = \"cpu\" )"},{"path":"https://davidycliao.github.io/flaiR/reference/get_sentiments_batch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Batch Process of Tagging Sentiment with Flair Models — get_sentiments_batch","text":"texts list vector texts sentiment prediction made. doc_ids list vector document IDs corresponding texts. tagger optional flair sentiment model. NULL (default), function loads default model based language. ... Additional arguments passed next. language character string indicating language texts.  Currently supports \"sentiment\" (English), \"sentiment-fast\" (English), \"de-offensive-language\" (German) show.text_id logical value. TRUE, includes actual text sentiment predicted. Default FALSE. gc.active logical value. TRUE, runs garbage collector processing texts. can help freeing memory releasing unused memory space, especially processing large number texts. Default FALSE. batch_size integer specifying number texts processed . can help optimize performance leveraging parallel processing. Default 5. device character string specifying computation device. can either \"cpu\" string representation GPU device number. instance, \"0\" corresponds first GPU. GPU device number provided, attempt use GPU. default \"cpu\". \"cuda\" \"cuda:0\"Refers first GPU system.       one GPU, specifying \"cuda\" \"cuda:0\" allocate       computations GPU. \"cuda:1\"Refers second GPU system, allowing allocation       specific computations GPU. \"cuda:2\"Refers third GPU system, systems       GPUs.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_sentiments_batch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Batch Process of Tagging Sentiment with Flair Models — get_sentiments_batch","text":"data.table containing three columns:  doc_id: document ID input. sentiment: Predicted sentiment text. score: Score sentiment prediction.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/get_sentiments_batch.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Batch Process of Tagging Sentiment with Flair Models — get_sentiments_batch","text":"","code":"if (FALSE) { library(flaiR)   texts <- c(\"UCD is one of the best universities in Ireland.\",            \"UCD has a good campus but is very far from my apartment in Dublin.\",            \"Essex is famous for social science research.\",            \"Essex is not in the Russell Group, but it is famous for political science research.\",            \"TCD is the oldest university in Ireland.\",            \"TCD is similar to Oxford.\")  doc_ids <- c(\"doc1\", \"doc2\", \"doc3\", \"doc4\", \"doc5\", \"doc6\")  # Load re-trained sentiment (\"sentiment\") model tagger_sent <- load_tagger_sentiments('sentiment')  results <- get_sentiments_batch(texts, doc_ids, tagger_sent, batch_size = 3) print(results) }"},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_ner.html","id":null,"dir":"Reference","previous_headings":"","what":"Load the Named Entity Recognition (NER) Tagger — load_tagger_ner","title":"Load the Named Entity Recognition (NER) Tagger — load_tagger_ner","text":"helper function load appropriate tagger based provided language. function supports variety languages/models.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_ner.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load the Named Entity Recognition (NER) Tagger — load_tagger_ner","text":"","code":"load_tagger_ner(language = NULL)"},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_ner.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load the Named Entity Recognition (NER) Tagger — load_tagger_ner","text":"language Character string indicating desired language NER tagger. Supported languages include \"en\", \"de\", \"fr\", \"nl\", \"da\", \"ar\".","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_ner.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load the Named Entity Recognition (NER) Tagger — load_tagger_ner","text":"instance Flair SequenceTagger specified language.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_ner.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Load the Named Entity Recognition (NER) Tagger — load_tagger_ner","text":"Supported languages corresponding codes : * \"en\" - English: `ner` * \"de\" - German: `de-ner` * \"fr\" - French: `fr-ner` * \"nl\" - Dutch: `nl-ner` * \"da\" - Danish: `da-ner` * \"ar\" - Arabic: `ar-ner`","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_ner.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load the Named Entity Recognition (NER) Tagger — load_tagger_ner","text":"","code":"# Load the English NER tagger tagger_en <- load_tagger_ner(\"en\")"},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_pos.html","id":null,"dir":"Reference","previous_headings":"","what":"Load Flair POS Tagger — load_tagger_pos","title":"Load Flair POS Tagger — load_tagger_pos","text":"function loads POS (part--speech) tagger model specified language using Flair library. language specified, defaults 'pos-fast'.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_pos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load Flair POS Tagger — load_tagger_pos","text":"","code":"load_tagger_pos(language = NULL)"},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_pos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load Flair POS Tagger — load_tagger_pos","text":"language character string indicating desired language model. `NULL`, function default 'pos-fast' model. Supported language models include: \"pos\" - General POS tagging \"pos-fast\" - Faster POS tagging \"upos\" - Universal POS tagging \"upos-fast\" - Faster Universal POS tagging \"pos-multi\" - Multi-language POS tagging \"pos-multi-fast\" - Faster Multi-language POS tagging \"ar-pos\" - Arabic POS tagging \"de-pos\" - German POS tagging \"de-pos-tweets\" - German POS tagging tweets \"da-pos\" - Danish POS tagging \"ml-pos\" - Malayalam POS tagging \"ml-upos\" - Malayalam Universal POS tagging \"pt-pos-clinical\" - Clinical Portuguese POS tagging \"pos-ukrainian\" - Ukrainian POS tagging","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_pos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load Flair POS Tagger — load_tagger_pos","text":"Flair POS tagger model corresponding specified (default) language.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_pos.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load Flair POS Tagger — load_tagger_pos","text":"","code":"if (FALSE) { tagger <- load_tagger_pos(\"pos-fast\") }"},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_sentiments.html","id":null,"dir":"Reference","previous_headings":"","what":"Load a Sentiment or Language Tagger Model from Flair — load_tagger_sentiments","title":"Load a Sentiment or Language Tagger Model from Flair — load_tagger_sentiments","text":"function loads pre-trained sentiment language tagger Flair library.  allows specify model language wish load.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_sentiments.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Load a Sentiment or Language Tagger Model from Flair — load_tagger_sentiments","text":"","code":"load_tagger_sentiments(language = NULL)"},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_sentiments.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Load a Sentiment or Language Tagger Model from Flair — load_tagger_sentiments","text":"language Character string specifying language model load. Can one \"sentiment\", \"sentiment-fast\", \"de-offensive-language\". Defaults \"sentiment\" provided.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_sentiments.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Load a Sentiment or Language Tagger Model from Flair — load_tagger_sentiments","text":"object loaded Flair model.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/load_tagger_sentiments.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Load a Sentiment or Language Tagger Model from Flair — load_tagger_sentiments","text":"","code":"if (FALSE) {   tagger <- load_tagger_sentiments(\"sentiment\") }"},{"path":"https://davidycliao.github.io/flaiR/reference/uk_immigration.html","id":null,"dir":"Reference","previous_headings":"","what":"UK House of Commons Immigration Debate Data — uk_immigration","title":"UK House of Commons Immigration Debate Data — uk_immigration","text":"dataset containing speeches debates UK House Commons topic immigration 2010.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/uk_immigration.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"UK House of Commons Immigration Debate Data — uk_immigration","text":"","code":"data(\"uk_immigration\")"},{"path":"https://davidycliao.github.io/flaiR/reference/uk_immigration.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"UK House of Commons Immigration Debate Data — uk_immigration","text":"data frame 12 variables: date Date speech, Date type agenda Agenda subject speech, character speechnumber Unique identifier speech, numeric speaker Name person giving speech, character party Political party speaker, character party.facts.id ID party, usually numeric character chair Person chairing session, character terms Terms tags associated speech, character list text Actual text speech, character parliament parliament session, character numeric iso3country ISO3 country code   parliament located, character year Year speech made, numeric","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/uk_immigration.html","id":"source","dir":"Reference","previous_headings":"","what":"Source","title":"UK House of Commons Immigration Debate Data — uk_immigration","text":"Data collected `ParSpeechV2` House Commons year 2010. dataset publicly available https://dataverse.harvard.edu/dataset.xhtml?persistentId=doi:10.7910/DVN/L4OAKN.","code":""},{"path":"https://davidycliao.github.io/flaiR/reference/uk_immigration.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"UK House of Commons Immigration Debate Data — uk_immigration","text":"","code":"if (FALSE) { data(uk_immigration) head(uk_immigration) }"},{"path":"https://davidycliao.github.io/flaiR/news/index.html","id":"flair-003-2020-09-10","dir":"Changelog","previous_headings":"","what":"flaiR 0.0.3 (2020-09-10)","title":"flaiR 0.0.3 (2020-09-10)","text":"Modifications Overview Added show.text_id gc.active parameters get_entities(), get_pos(), get_sentiment(). Enhanced batch processing introduction batch_size functions get_entities_batch(), get_pos_batch(), get_sentiment_batch(). Introduced device parameter specify computation device. Introduction New Parameters: show.text_id: activated (TRUE), actual text (labeled ‘text_id’) entity derived appended resulting dataset. Although enriching output validation traceability, users cautious, might inflate output size. default, option remains deactivated (FALSE). context, previously, ‘text_id’ intrinsically generated, potentially elevating R’s memory consumption. gc.active: Activating (TRUE) trigger garbage collector post-text processing. action aids memory optimization relinquishing unallocated memory spaces, crucial step, particularly processing extensive text dataset. default set FALSE, users managing larger texts consider setting gc.active TRUE. Though action doesn’t bolster computational efficiency, circumvent potential RStudio crashes. Batch Processing Enhancement: inception batch_size parameter (defaulted 5) get_entities_batch(), get_pos_batch(), get_sentiment_batch() augments batch processing capabilities. addition led creation internal function named process_batch proficiently manage text batch linked doc_ids. core functionality adapted segregate texts doc_ids specific batches, subsequently processed via process_batch function, final results amalgamated seamlessly. device: descriptive character string pinpointing computation device. Users can opt “cpu” GPU device number string format. instance, representing primary GPU 0. GPU device number furnished, system endeavor harness specific GPU, “cpu” default setting. batch_size: integer specifying size batch. Default 5.","code":""},{"path":"https://davidycliao.github.io/flaiR/news/index.html","id":"flair-001-development-version","dir":"Changelog","previous_headings":"","what":"flaiR 0.0.1 (development version)","title":"flaiR 0.0.1 (development version)","text":"features flaiR currently include part--speech tagging, sentiment tagging, named entity recognition tagging. flaiR requires Python version 3.7 higher operate concurrently. create_flair_env(): function install Flair Python library using reticulate R package, automatically generated.","code":""}]

# name: R-CMD-check
#
# on:
#   push:
#     branches:
#       - main
#       - develop
#   pull_request:
#     branches:
#       - main
#       - develop
#
# jobs:
#
#   R-CMD-check:
#     runs-on: ${{ matrix.config.os }}
#
#     name: ${{ matrix.config.os }} (${{ matrix.config.r }})
#
#     strategy:
#       fail-fast: false
#       matrix:
#         config:
#           - {os: macos-latest,   r: 'release'}
#           - {os: windows-latest, r: 'release'}
#
#     env:
#       GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
#       R_KEEP_PKG_SOURCE: yes
#
#     steps:
#       - uses: actions/checkout@v2
#
#       - uses: r-lib/actions/setup-pandoc@v2
#
#       - name: Setup Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.9'  # Ensure Python 3.x is being used
#
#       - name: Check Python Version
#         run: |
#           python --version
#
#       - name: Install Python dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install flair
#
#       - name: Setup Python (Only on ubuntu-latest)
#         if: matrix.config.os == 'ubuntu-latest'
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.10.13'
#
#       - name: Install Python venv and dependencies (Only on ubuntu-latest)
#         if: matrix.config.os == 'ubuntu-latest'
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y python3-venv
#           python -m venv ~/.venv
#           echo "RETICULATE_PYTHON=~/.venv/bin/python" >> $GITHUB_ENV
#           source ~/.venv/bin/activate
#
#       - uses: r-lib/actions/setup-r@v2
#         with:
#           r-version: ${{ matrix.config.r }}
#           http-user-agent: ${{ matrix.config.http-user-agent }}
#           use-public-rspm: true
#
#       - name: Install reticulate (Only on ubuntu-latest)
#         if: matrix.config.os == 'ubuntu-latest'
#         run: |
#           Rscript -e "install.packages('reticulate', repos = 'https://cloud.r-project.org/')"
#
#       - name: Install Pandoc (Only on Windows)
#         if: matrix.config.os == 'windows-latest'
#         run: |
#           choco install pandoc
#
#       - name: Install Python dependencies (Only on Windows)
#         if: matrix.config.os == 'windows-latest'
#         run: |
#           python -m pip install --upgrade pip
#           pip install scipy==1.12.0  # test
#           pip install flair
#
#       - name: Install Python dependencies (Only on macOS)
#         if: matrix.config.os == 'macos-latest'
#         run: |
#           python -m pip install --upgrade pip
#           pip install scipy==1.12.0  # test
#           pip install flair
#
#       - uses: r-lib/actions/setup-r-dependencies@v2
#         with:
#           extra-packages: rcmdcheck
#

name: R-CMD-check
on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
    steps:
      - uses: actions/checkout@v2
      - uses: r-lib/actions/setup-pandoc@v2

      # Install system dependencies for macOS BEFORE Python setup
      - name: Install system dependencies (macOS)
        if: matrix.config.os == 'macos-latest'
        run: |
          brew install armadillo pkg-config
          # Set environment variables for compilation
          echo "PKG_CPPFLAGS=-I/opt/homebrew/include" >> $GITHUB_ENV
          echo "PKG_LIBS=-L/opt/homebrew/lib -larmadillo" >> $GITHUB_ENV
          echo "CPPFLAGS=-I/opt/homebrew/include" >> $GITHUB_ENV
          echo "LDFLAGS=-L/opt/homebrew/lib" >> $GITHUB_ENV

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.9'  # Ensure Python 3.x is being used
      - name: Check Python Version
        run: |
          python --version
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flair
      - name: Setup Python (Only on ubuntu-latest)
        if: matrix.config.os == 'ubuntu-latest'
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.13'
      - name: Install Python venv and dependencies (Only on ubuntu-latest)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y python3-venv
          python -m venv ~/.venv
          echo "RETICULATE_PYTHON=~/.venv/bin/python" >> $GITHUB_ENV
          source ~/.venv/bin/activate
      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
      - name: Install reticulate (Only on ubuntu-latest)
        if: matrix.config.os == 'ubuntu-latest'
        run: |
          Rscript -e "install.packages('reticulate', repos = 'https://cloud.r-project.org/')"
      - name: Install Pandoc (Only on Windows)
        if: matrix.config.os == 'windows-latest'
        run: |
          choco install pandoc
      - name: Install Python dependencies (Only on Windows)
        if: matrix.config.os == 'windows-latest'
        run: |
          python -m pip install --upgrade pip
          pip install scipy==1.12.0  # test
          pip install flair
      - name: Install Python dependencies (Only on macOS)
        if: matrix.config.os == 'macos-latest'
        run: |
          python -m pip install --upgrade pip
          pip install scipy==1.12.0  # test
          pip install flair
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: rcmdcheck
      - uses: r-lib/actions/check-r-package@v2

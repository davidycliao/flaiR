# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
#
# See https://github.com/r-lib/actions/tree/master/examples#readme for
# additional example workflows available for the R community.
# on:
#   push:
#     branches: [main, master]
#   pull_request:
#     branches: [main, master]
#
# name: R-CMD-check
#
# jobs:
#   R-CMD-check:
#     runs-on: ${{ matrix.config.os }}
#
#     name: ${{ matrix.config.os }} (${{ matrix.config.r }})
#
#     strategy:
#       fail-fast: false
#       matrix:
#         config:
#           - {os: macos-latest,   r: 'release'}
#           - {os: windows-latest, r: 'release'}
#           - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
#           - {os: ubuntu-latest,   r: 'release'}
#     env:
#       GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
#       R_KEEP_PKG_SOURCE: yes
#
#     steps:
#       - uses: actions/checkout@v2
#
#       - uses: r-lib/actions/setup-pandoc@v2
#
#
#       - name: Setup Python (Only on ubuntu-latest)
#         if: matrix.config.os == 'ubuntu-latest'
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.x'
#
#       - name: Install Python venv and dependencies (Only on ubuntu-latest)
#         if: matrix.config.os == 'ubuntu-latest'
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y python3-venv
#           python -m venv ~/.venv
#           echo "RETICULATE_PYTHON=~/.venv/bin/python" >> $GITHUB_ENV
#           source ~/.venv/bin/activate
#       - uses: r-lib/actions/setup-r@v2
#         with:
#           r-version: ${{ matrix.config.r }}
#           http-user-agent: ${{ matrix.config.http-user-agent }}
#           use-public-rspm: true
#
#       - name: Install reticulate (Only on ubuntu-latest)
#         if: matrix.config.os == 'ubuntu-latest'
#         run: |
#           Rscript -e "install.packages('reticulate', repos = 'https://cloud.r-project.org/')"
#
#       - uses: r-lib/actions/setup-r-dependencies@v2
#         with:
#           extra-packages: any::rcmdcheck
#           needs: check
#
#       - uses: r-lib/actions/check-r-package@v2
#         with:
#           upload-snapshots: true
#
#
# on:
#   push:
#     branches: [main, master]
#   pull_request:
#     branches: [main, master]
#
# name: R-CMD-check
#
# jobs:
#   R-CMD-check:
#     runs-on: ${{ matrix.config.os }}
#
#     name: ${{ matrix.config.os }} (${{ matrix.config.r }})
#
#     strategy:
#       fail-fast: false
#       matrix:
#         config:
#           - {os: macos-latest,   r: 'release'}
#           - {os: windows-latest, r: 'release'}
#           - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
#           - {os: ubuntu-latest,   r: 'release'}
#     env:
#       GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
#       R_KEEP_PKG_SOURCE: yes
#
#     steps:
#       - uses: actions/checkout@v2
#
#       - uses: r-lib/actions/setup-pandoc@v2
#
#       - name: Setup Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.9'  # Ensure Python 3.x is being used
#
#       - name: Check Python Version
#         run: |
#           python --version
#
#       - name: Install Python dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install flair
#
#       - name: Setup Python (Only on ubuntu-latest)
#         if: matrix.config.os == 'ubuntu-latest'
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.10.13'
#
#       - name: Install Python venv and dependencies (Only on ubuntu-latest)
#         if: matrix.config.os == 'ubuntu-latest'
#         run: |
#           sudo apt-get update
#           sudo apt-get install -y python3-venv
#           python -m venv ~/.venv
#           echo "RETICULATE_PYTHON=~/.venv/bin/python" >> $GITHUB_ENV
#           source ~/.venv/bin/activate
#
#       - uses: r-lib/actions/setup-r@v2
#         with:
#           r-version: ${{ matrix.config.r }}
#           http-user-agent: ${{ matrix.config.http-user-agent }}
#           use-public-rspm: true
#
#       - name: Install reticulate (Only on ubuntu-latest)
#         if: matrix.config.os == 'ubuntu-latest'
#         run: |
#           Rscript -e "install.packages('reticulate', repos = 'https://cloud.r-project.org/')"
#
#       - name: Install Pandoc (Only on Windows)
#         if: matrix.config.os == 'windows-latest'
#         run: |
#           choco install pandoc
#
#       - name: Install Python dependencies (Only on Windows)
#         if: matrix.config.os == 'windows-latest'
#         run: |
#           python -m pip install --upgrade pip
#           pip install scipy==1.12.0  # test
#           pip install flair
#
#       - name: Install Python dependencies (Only on macOS)
#         if: matrix.config.os == 'macos-latest'
#         run: |
#           python -m pip install --upgrade pip
#           pip install scipy==1.12.0  # test
#           pip install flair
#
#       - uses: r-lib/actions/setup-r-dependencies@v2
#         with:
#           extra-packages: rcmdcheck
#
#       # - uses: r-lib/actions/check-r-package@v2
#       #   with:
#       #     upload-snapshots: true

name: R-CMD-check

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest, r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest, r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v2

      - uses: r-lib/actions/setup-pandoc@v2

      # Install system dependencies for Ubuntu
      - name: Install system dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libharfbuzz-dev \
            libfribidi-dev \
            libfreetype6-dev \
            libpng-dev \
            libtiff5-dev \
            libjpeg-dev \
            python3-venv \
            libgit2-dev \
            libssh2-1-dev

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.10.13'

      # Setup pip cache
      - name: Setup pip cache
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install scipy==1.12.0
          pip install flair
          python --version

      - name: Setup Python venv (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          python -m venv ~/.venv
          echo "RETICULATE_PYTHON=~/.venv/bin/python" >> $GITHUB_ENV
          source ~/.venv/bin/activate

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - name: Install Matrix package
        run: |
          install.packages('remotes')
          version <- getRversion()
          tryCatch({
            if (version >= "4.3.2") {
              remotes::install_version("Matrix", version = "1.5-1")
            } else if (version >= "4.2.0" && version < "4.3.0") {
              remotes::install_version("Matrix", version = "1.4-1", force = TRUE)
            } else {
              remotes::install_version("Matrix", version = "1.3-4")
            }
          }, error = function(e) {
            message("Error installing Matrix: ", e$message)
          })
        shell: Rscript {0}

      - name: Install R dependencies
        run: |
          install.packages(c('reticulate', 'png', 'jsonlite'))
        shell: Rscript {0}

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: rcmdcheck

      - name: Check R package
        env:
          _R_CHECK_CRAN_INCOMING_: false
        run: |
          options(crayon.enabled = TRUE)
          rcmdcheck::rcmdcheck(args = c("--no-manual", "--as-cran"), error_on = "warning", check_dir = "check")
        shell: Rscript {0}

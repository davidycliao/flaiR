# name: flaiR-Python3.9
#
# on:
#   push:
#     branches:
#       - main
#       - develop
#   pull_request:
#     branches:
#       - main
#       - develop
#
# jobs:
#   R-CMD-check:
#     runs-on: ${{ matrix.config.os }}
#     name: ${{ matrix.config.os }} (${{ matrix.config.r }})
#     strategy:
#       fail-fast: false
#       matrix:
#         config:
#           - {os: macos-latest,   r: 'release'}
#           - {os: windows-latest, r: 'release'}
#           - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
#           - {os: ubuntu-latest,   r: 'release'}
#
#     env:
#       GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
#       R_KEEP_PKG_SOURCE: yes
#
#     steps:
#       - uses: actions/checkout@v2
#
#       - uses: r-lib/actions/setup-r@v2
#         with:
#           r-version: ${{ matrix.config.r }}
#           http-user-agent: ${{ matrix.config.http-user-agent }}
#           use-public-rspm: true
#
#       - uses: r-lib/actions/setup-pandoc@v2
#
#       - name: Setup Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.9'
#
#       - name: Check Python Version
#         run: python --version
#
#       - name: Install Python dependencies
#         run: |
#           python -m pip install --upgrade pip
#           # pip install flair
#
#       - name: Install R dependencies
#         run: |
#           install.packages('remotes')
#           remotes::install_github("davidycliao/flaiR", force = TRUE)
#         shell: Rscript {0}
#
#       - uses: r-lib/actions/setup-r-dependencies@v2
#         with:
#           extra-packages: rcmdcheck

name: flaiR-Python3.9
on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
jobs:
  R-CMD-check:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, windows-latest]
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      # Force reticulate to use system Python
      RETICULATE_PYTHON_ENV: ""
    steps:
      - uses: actions/checkout@v4
      - uses: r-lib/actions/setup-pandoc@v2

      # Python 環境設定 (移到最前面)
      - uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install Python packages
        run: |
          python -m pip install --upgrade pip
          pip install flair torch
          echo "=== Python 版本確認 ==="
          python --version
          echo "=== Python 路徑 ==="
          python -c "import sys; print('Python path:', sys.executable)"
          echo "=== Flair 安裝確認 ==="
          python -c "import flair; print('Flair version:', flair.__version__)"
          echo "=== 已安裝套件列表 ==="
          pip list | grep -E "(flair|torch)"

      # macOS: 安裝 Armadillo 並設定編譯環境
      - name: Install Armadillo (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          brew install armadillo
          mkdir -p ~/.R
          echo "PKG_CPPFLAGS=-I/opt/homebrew/include" > ~/.R/Makevars
          echo "PKG_LIBS=-L/opt/homebrew/lib -larmadillo" >> ~/.R/Makevars
          echo "=== Makevars 內容 ==="
          cat ~/.R/Makevars
          echo "=== Armadillo 安裝檢查 ==="
          ls -la /opt/homebrew/include/armadillo* || echo "armadillo headers not found"
          ls -la /opt/homebrew/lib/libarmadillo* || echo "armadillo libraries not found"

      # R 環境設定
      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      # 配置 reticulate 使用正確的 Python
      - name: Configure reticulate
        shell: Rscript {0}
        run: |
          # 安裝 reticulate
          install.packages("reticulate")

          # 設定 Python 路徑
          python_path <- Sys.which("python")
          cat("Python path found:", python_path, "\n")

          # 強制 reticulate 使用系統 Python
          Sys.setenv(RETICULATE_PYTHON = python_path)

          # 驗證設定
          library(reticulate)
          cat("Reticulate Python config:\n")
          print(py_config())

          # 測試 flair 導入
          tryCatch({
            flair <- import("flair")
            cat("Successfully imported flair\n")
            cat("Flair version:", flair$`__version__`, "\n")
          }, error = function(e) {
            cat("Error importing flair:", e$message, "\n")
            # 顯示可用模組
            cat("Available Python modules:\n")
            modules <- py_run_string("import pkg_resources; print([p.project_name for p in pkg_resources.working_set])")
          })

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      # Windows 特定設定
      - name: Configure Windows Python (Windows only)
        if: matrix.os == 'windows-latest'
        shell: Rscript {0}
        run: |
          # Windows 可能需要額外的 PATH 設定
          python_path <- Sys.which("python")
          python_dir <- dirname(python_path)
          current_path <- Sys.getenv("PATH")
          new_path <- paste(python_dir, current_path, sep = ";")
          Sys.setenv(PATH = new_path)
          cat("Updated PATH for Windows\n")

      - uses: r-lib/actions/check-r-package@v2

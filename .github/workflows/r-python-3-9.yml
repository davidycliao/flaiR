# name: flaiR-Python3.9
#
# on:
#   push:
#     branches:
#       - main
#       - develop
#   pull_request:
#     branches:
#       - main
#       - develop
#
# jobs:
#   R-CMD-check:
#     runs-on: ${{ matrix.config.os }}
#     name: ${{ matrix.config.os }} (${{ matrix.config.r }})
#     strategy:
#       fail-fast: false
#       matrix:
#         config:
#           - {os: macos-latest,   r: 'release'}
#           - {os: windows-latest, r: 'release'}
#           - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
#           - {os: ubuntu-latest,   r: 'release'}
#
#     env:
#       GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
#       R_KEEP_PKG_SOURCE: yes
#
#     steps:
#       - uses: actions/checkout@v2
#
#       - uses: r-lib/actions/setup-r@v2
#         with:
#           r-version: ${{ matrix.config.r }}
#           http-user-agent: ${{ matrix.config.http-user-agent }}
#           use-public-rspm: true
#
#       - uses: r-lib/actions/setup-pandoc@v2
#
#       - name: Setup Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.9'
#
#       - name: Check Python Version
#         run: python --version
#
#       - name: Install Python dependencies
#         run: |
#           python -m pip install --upgrade pip
#           # pip install flair
#
#       - name: Install R dependencies
#         run: |
#           install.packages('remotes')
#           remotes::install_github("davidycliao/flaiR", force = TRUE)
#         shell: Rscript {0}
#
#       - uses: r-lib/actions/setup-r-dependencies@v2
#         with:
#           extra-packages: rcmdcheck

name: flaiR-Python3.9

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})

    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest, r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest, r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest, r: 'release'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true

      - uses: r-lib/actions/setup-pandoc@v2

      # Install system dependencies - Ubuntu/Linux
      - name: Install system dependencies (Ubuntu)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update -y
          sudo apt-get install -y \
            libarmadillo-dev \
            libopenblas-dev \
            liblapack-dev \
            libarpack2-dev \
            libcurl4-openssl-dev \
            libssl-dev \
            libxml2-dev \
            libfontconfig1-dev \
            libfreetype6-dev \
            libpng-dev \
            libtiff5-dev \
            libjpeg-dev \
            libgit2-dev \
            libharfbuzz-dev \
            libfribidi-dev

      # Install system dependencies - macOS
      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          # Update brew and install necessary packages
          brew update
          brew install armadillo openblas lapack arpack

      # Setup Python environment
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Check Python Version
        run: python --version

      # Install Python dependencies
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Install flair if needed
          # pip install flair torch transformers

      # Verify Armadillo installation (Linux only)
      - name: Verify Armadillo installation
        if: runner.os == 'Linux'
        run: |
          echo "Checking for Armadillo headers..."
          find /usr/include -name "armadillo*" -type f | head -5 || true
          pkg-config --cflags armadillo || true
          ldconfig -p | grep armadillo || true

      # Set compilation environment variables (Linux)
      - name: Set compilation flags (Linux)
        if: runner.os == 'Linux'
        run: |
          echo "PKG_CPPFLAGS=-I/usr/include" >> $GITHUB_ENV
          echo "PKG_LIBS=-larmadillo -lopenblas -llapack" >> $GITHUB_ENV

      # Install R dependencies
      - name: Install R dependencies
        run: |
          # Install basic packages
          install.packages(c('remotes', 'pak'))

          # First install RcppArmadillo
          install.packages('RcppArmadillo', type = 'source')

          # Set compilation parameters and install rsparse
          if (Sys.info()[["sysname"]] == "Linux") {
            Sys.setenv(PKG_CPPFLAGS = "-I/usr/include")
            Sys.setenv(PKG_LIBS = "-larmadillo -lopenblas -llapack")
          }

          # Install rsparse with specific configure arguments
          install.packages('rsparse', type = 'source',
                          configure.args = c('--with-armadillo-include=/usr/include'))

          # Install flaiR
          remotes::install_github("davidycliao/flaiR", force = TRUE)
        shell: Rscript {0}

      # Use r-lib actions to install other dependencies
      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: |
            any::rcmdcheck
            any::covr
          needs: check

      # Run R CMD check
      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
